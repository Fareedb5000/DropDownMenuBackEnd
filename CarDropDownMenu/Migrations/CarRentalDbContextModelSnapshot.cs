// <auto-generated />
using CarDropDownMenu.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarDropDownMenu.Migrations
{
    [DbContext(typeof(CarRentalDbContext))]
    partial class CarRentalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarBrand", b =>
                {
                    b.Property<int>("CarBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarBrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarBrandId");

                    b.ToTable("CarBrands");
                });

            modelBuilder.Entity("CarBrandCarMakeMatrix", b =>
                {
                    b.Property<int>("CarBrandId")
                        .HasColumnType("int");

                    b.Property<int>("CarMakeId")
                        .HasColumnType("int");

                    b.HasKey("CarBrandId", "CarMakeId");

                    b.HasIndex("CarMakeId");

                    b.ToTable("CarBrandCarMakeMatrix");
                });

            modelBuilder.Entity("CarDropDownMenu.Models.Submit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CarBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarBrandID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarMakeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Submit");
                });

            modelBuilder.Entity("CarMake", b =>
                {
                    b.Property<int>("CarMakeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarMakeId"));

                    b.Property<int>("CarBrandId")
                        .HasColumnType("int");

                    b.Property<string>("MakeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarMakeId");

                    b.ToTable("CarMakes");
                });

            modelBuilder.Entity("CarBrandCarMakeMatrix", b =>
                {
                    b.HasOne("CarBrand", "CarBrand")
                        .WithMany("CarBrandCarMakeMatrix")
                        .HasForeignKey("CarBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarMake", "CarMake")
                        .WithMany("CarBrandCarMakeMatrix")
                        .HasForeignKey("CarMakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarBrand");

                    b.Navigation("CarMake");
                });

            modelBuilder.Entity("CarBrand", b =>
                {
                    b.Navigation("CarBrandCarMakeMatrix");
                });

            modelBuilder.Entity("CarMake", b =>
                {
                    b.Navigation("CarBrandCarMakeMatrix");
                });
#pragma warning restore 612, 618
        }
    }
}
